apply plugin: 'com.android.application'

apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'org.jetbrains.dokka-android'

apply plugin: 'io.fabric'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.stocksexchange.android"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 4
        versionName "1.1.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        debug {
            multiDexEnabled true
        }

        release {
            multiDexEnabled true
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    flavorDimensions "default"
    productFlavors {

        production {
            dimension "default"
            applicationId "com.stocksexchange.android"

            buildConfigField("String", "API_BASE_URL", "\"https://app.stocks.exchange/api2/\"")

            buildConfigField("String", "STOCKS_EXCHANGE_HOSTNAME", "\"stocks.exchange\"")
            buildConfigField("String", "STOCKS_EXCHANGE_WEBSITE_URL", "\"https://stocks.exchange\"")
            buildConfigField("String", "STOCKS_EXCHANGE_TERMS_OF_USE_URL", "\"https://app.stocks.exchange/en/terms-of-use\"")
            buildConfigField("String", "STOCKS_EXCHANGE_SOCKET_URL", "\"wss://app.stocks.exchange/wss\"")

            buildConfigField("String", "FEEDBACK_EMAIL_ADDRESS", "\"feedback@stocks.exchange\"")

            buildConfigField("String", "CERTIFICATE_PUBLIC_KEY_HASH_FIRST", "\"sha256/eq7Gpo5uoPjGSsMq17dN+Tk6Y92cuM1QZUB/mwcPGEY=\"")
            buildConfigField("String", "CERTIFICATE_PUBLIC_KEY_HASH_SECOND", "\"sha256/8Rw90Ej3Ttt8RRkrg+WYDS9n7IS03bk5bjP/UXPtaY8=\"")
            buildConfigField("String", "CERTIFICATE_PUBLIC_KEY_HASH_THIRD", "\"sha256/Ko8tivDrEjiY90yGasP6ZpBU4jwXvHqVvQI0GS3GNdA=\"")
        }

    }
}

androidExtensions {
    experimental = true
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dokka {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/docs"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-coroutines:$anko_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_version"
    implementation "com.android.support:support-v4:$support_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "com.android.support:customtabs:$support_version"
    implementation "com.android.support:multidex:$multi_dex_version"
    implementation "com.google.android.gms:play-services-vision:$play_services_vision_version"
    implementation "com.google.android.gms:play-services-auth:$play_services_auth_version"
    implementation "com.google.firebase:firebase-core:$firebase_core_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"
    implementation "com.crashlytics.sdk.android:crashlytics:$crashlytics_version"
    implementation "org.greenrobot:eventbus:$event_bus_version"
    implementation "com.github.PhilJay:MPAndroidChart:$mp_android_chart_version"
    implementation "com.github.kenglxn.QRGen:android:$qr_gen_version"
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "ru.gildor.coroutines:kotlin-coroutines-retrofit:$retrofit_coroutines_version"
    implementation "net.cachapa.expandablelayout:expandablelayout:$expandable_layout_version"
    implementation "com.afollestad.material-dialogs:core:$material_dialogs_version"
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
}

apply plugin: 'com.google.gms.google-services'
